# name: FastAPI CI/CD

# on:
#   # Trigger the workflow on push
#   push:
#     branches: 
#       # Push events on main branch
#       - main 

# # The Job defines a series of steps that execute on the same runner.
# jobs:

#   CI:
#     # Define the runner used in the workflow
#     runs-on: ubuntu-latest
#     steps:   
#       # Check out repo so our workflow can access it
#       - uses: actions/checkout@v3
      
#       # Step-1 Setup Python
#       - name: Set up Python
#         # This action sets up a Python environment for use in actions
#         uses: actions/setup-python@v3
#         with:
#           python-version: 3.10.0
#           # optional: architecture: x64 x64 or x86. Defaults to x64 if not specified

#       # Step-2 Install Python Virtual ENV
#       - name: Install Python Virtual ENV
#         run: pip3 install virtualenv

#       # Step-3 Setup Virtual ENV
#       # https://docs.github.com/en/actions/guides/caching-dependencies-to-speed-up-workflows
#       - name:  Virtual ENV
#         uses: actions/cache@v2
#         id: cache-venv # name for referring later
#         with:
#           path: venv # what we cache: the Virtual ENV
#           # The cache key depends on requirements.txt
#           key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
#           restore-keys: |
#             ${{ runner.os }}-venv-

#       # Step-4 Build a Virtual ENV, but only if it doesn't already exist
#       - name: Activate Virtual ENV
#         run: python -m venv venv && source venv/bin/activate && pip3 install -r requirements.txt
#         if: steps.cache-venv.outputs.cache-hit != 'true'

#       - name: Run Tests   
#         # Note that you have to activate the virtualenv in every step
#         # because GitHub actions doesn't preserve the environment   
#         run: . venv/bin/activate && pytest
#       - name: Create archive of dependencies
#         run: |
#           cd ./venv/lib/python3.7/site-packages
#           zip -r9 ../../../../api.zip .
#       - name: Add API files to Zip file
#         run: cd ./api && zip -g ../api.zip -r .
#       - name: Upload zip file artifact
#         uses: actions/upload-artifact@v3
#         with:
#           name: api
#           path: api.zip

  
name: FastAPI CI/CD
 
on:
  # Trigger the workflow on push
  push:
    branches:
      - main
 
jobs:
  CI:
    # Define the runner used in the workflow
    runs-on: ubuntu-latest
 
    steps:
      # Step-1: Check out the repo so our workflow can access it
      - uses: actions/checkout@v3
 
      # Step-2: Set up Python environment (using Python 3.10)
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.0  # Specify Python version
 
      # Step-3: Install dependencies
      - name: Install dependencies
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
 
      # Step-4: Run tests
      - name: Run Tests
        run: |
          . venv/bin/activate
          pytest --maxfail=1 --disable-warnings -v
 
      # Step-5: Create archive of dependencies
      - name: Create archive of dependencies
        run: |
          cd venv/lib/python3.10/site-packages
          zip -r9 ../../../../api.zip .
 
      # Step-6: Add API files to the Zip file
      - name: Add API files to Zip file
        run: |
          cd ./apizip -g ../api.zip -r .
 
      # Step-7: Upload zip file artifact
      - name: Upload zip file artifact
        uses: actions/upload-artifact@v3
        with:
          name: api
          path: api.zip